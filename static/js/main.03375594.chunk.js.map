{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/ContactsSubTile.js","components/tile/AppointmentSubTile.js","components/tile/DeleteIcon.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","props","for","name","multiple","value","onChange","contacts","map","contact","index","Name","AppointmentForm","onSubmit","isDuplicate","className","type","title","placeholder","required","withwhom","date","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","time","ContactsSubTile","phone","icon","faPhone","email","faEnvelopeSquare","AppointmentSubTile","with","length","faUser","join","faCalendarAlt","faClock","DeleteIcon","onClick","delete","id","Tile","TileList","Phone","eMail","appointments","appointment","AppointmentsPage","useState","appointmentTitle","setAppointmentTitle","appointmentDate","setAppointmentDate","appointmentTime","setAppointmentTime","appointmentWith","setAppointmentWith","duplicate","setIsDuplicate","e","preventDefault","newAppointmentTitle","newAppointmentDate","newAppointmentTime","newAppointmentWith","find","console","log","setAppointment","target","Array","from","selectedOptions","option","ContactForm","setName","setPhone","pattern","setEmail","ContactsPage","handleChange","newContactName","newContactPhone","newContactEmail","setContact","App","deleteItem","getAttribute","newAppointmentArray","splice","newContactArray","ROUTES","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"qNAGaA,EAAgB,SAACC,GAQ5B,OACE,gCACA,uBAAOC,IAAI,WAAX,yCACA,uBACA,wBAAQC,KAAK,WAAWC,UAAQ,EAACC,MAAOJ,EAAMI,MAAOC,SAAUL,EAAMK,SAArE,SACCL,EAAMM,SAASC,KAAI,SAACC,EAASC,GAClC,OAAO,wBAAQL,MAAOI,EAAQE,KAAvB,SAA0CF,EAAQE,MAAhBD,YCd5BE,EAAkB,SAACX,GAQ9B,OACE,uBAAME,KAAK,cAAcU,SAAUZ,EAAMY,SAAzC,UACJ,uBAAOX,IAAI,cAAX,SAA0BD,EAAMa,YAAY,sBAAMC,UAAU,QAAhB,yCAA2D,iBACvG,uBACA,uBAAOC,KAAK,OAAOb,KAAK,QAAQE,MAAOJ,EAAMgB,MAAOX,SAAUL,EAAMK,SAAUY,YAAY,2BAA2BC,UAAQ,IAC5HlB,EAAMM,SACP,cAAC,EAAD,CAAeA,SAAUN,EAAMM,SAAUF,MAAOJ,EAAMmB,SAAUd,SAAUL,EAAMK,WAAY,GAE5F,uBAAOJ,IAAI,OAAX,kCACA,uBAAK,uBAAOc,KAAK,OAAOb,KAAK,OAAOE,MAAOJ,EAAMoB,KAAMC,IAhB9B,WAAO,IAAD,GACA,IAAIC,MAC5BC,mBAAmB,SACnBC,MAAM,KAHkB,mBACpBC,EADoB,KACbC,EADa,KACRC,EADQ,KAI3B,MAAM,GAAN,OAAUA,EAAV,YAAkBF,EAAMG,SAAS,EAAG,KAApC,YAA4CF,EAAIE,SAAS,EAAG,MAYJC,GAAkBxB,SAAUL,EAAMK,SAAUY,YAAY,4BACpH,uBAAK,uBAAOhB,IAAI,OAAX,kCAA8C,uBACnD,uBAAOc,KAAK,OAAOb,KAAK,OAAOE,MAAOJ,EAAM8B,KAAMzB,SAAUL,EAAMK,SAAUY,YAAY,SACxF,uBACA,gD,gBCpBac,EAAkB,SAAC/B,GAC5B,OACE,gCACLA,EAAMgC,MAAM,oBAAGlB,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAiBmB,KAAMC,MAA3C,IAAuDlC,EAAMgC,SAAW,GAChFhC,EAAMmC,MAAM,oBAAGrB,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAiBmB,KAAMG,MAA3C,IAAgEpC,EAAMmC,SAAW,OCJrFE,EAAqB,SAACrC,GAC/B,OACE,gCACGA,EAAMsC,KAAKC,OAAO,oBAAGzB,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAiBmB,KAAMO,MAA3C,IACjBxC,EAAMsC,KAAKG,KAAK,SAEZ,GACbzC,EAAMoB,KAAK,oBAAGN,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAiBmB,KAAMS,MAA3C,IAA6D1C,EAAMoB,QAAU,GACpFpB,EAAM8B,KAAK,oBAAGhB,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAiBmB,KAAMU,MAA3C,IAAuD3C,EAAM8B,QAAU,OCV1Ec,EAAa,SAAC5C,GACvB,OACJ,sBAAMc,UAAU,SAAS+B,QAAS7C,EAAM8C,OAAQC,GAAI/C,EAAM+C,GAAIhC,KAAMf,EAAMe,KAA1E,gBCCaiC,EAAO,SAAChD,GACnB,OACE,sBAAKc,UAAU,iBAAf,UACE,cAAC,EAAD,CAAYiC,GAAI/C,EAAMS,MAAOqC,OAAQ9C,EAAM8C,OAAQ/B,KAAMf,EAAME,KAAK,UAAU,gBAC9E,mBAAGY,UAAU,aAAb,SAA2Bd,EAAME,KAAKF,EAAME,KAAKF,EAAMgB,QACtDhB,EAAME,KACN,cAAC,EAAD,CAAiB8B,MAAOhC,EAAMgC,MAAOG,MAAOnC,EAAMmC,QAEnD,cAAC,EAAD,CAAoBf,KAAMpB,EAAMoB,KAAMU,KAAM9B,EAAM8B,KAAMQ,KAAMtC,EAAMsC,WCV7DW,EAAW,SAACjD,GACvB,OAAIA,EAAMM,SACNN,EAAMM,SAASiC,OAKjB,qBAAKzB,UAAU,oBAAf,SACEd,EAAMM,SAASC,KAAI,SAACC,EAAQC,GAC3B,OAAO,cAAC,EAAD,CACNP,KAAMM,EAAQE,KACdsB,MAAOxB,EAAQ0C,MACff,MAAO3B,EAAQ2C,MACfL,OAAQ9C,EAAM8C,OAEdrC,MAAOA,GADFA,QAXD,kBAsBHT,EAAMoD,aACTpD,EAAMoD,aAAab,OAKrB,qBAAKzB,UAAU,oBAAf,SACEd,EAAMoD,aAAa7C,KAAI,SAAC8C,EAAY5C,GACnC,OAAO,cAAC,EAAD,CACNO,MAAOqC,EAAYrC,MACnBI,KAAMiC,EAAYjC,KAClBU,KAAMuB,EAAYvB,KAClBQ,KAAMe,EAAYf,KAClBQ,OAAQ9C,EAAM8C,OAEdrC,MAAOA,GADFA,QAZD,2BAFP,GCtBQ6C,EAAmB,SAACtD,GAAW,IAAD,EAEIuD,mBAAS,IAFb,mBAEpCC,EAFoC,KAEnBC,EAFmB,OAGEF,mBAAS,IAHX,mBAGpCG,EAHoC,KAGpBC,EAHoB,OAIEJ,mBAAS,IAJX,mBAIpCK,EAJoC,KAIpBC,EAJoB,OAKEN,mBAAS,IALX,mBAKpCO,EALoC,KAKpBC,EALoB,OAMRR,oBAAS,GAND,mBAMpCS,EANoC,KAM1BC,EAN0B,KAiEzC,OACE,sBAAKnD,UAAU,YAAf,UACE,0BAASA,UAAU,OAAnB,UACE,iDACA,cAAC,EAAD,CAAiBF,SAlCF,SAACsD,GACpBA,EAAEC,iBAEL,IAAMC,EAAsBZ,EACtBa,EAAqBX,EACrBY,EAAqBV,EACrBW,EAAqBT,EAG3B,GAAI9D,EAAMoD,aAAaoB,MAAK,SAAAnB,GAAW,OAAGA,EAAYrC,QAAQoD,KAG5D,OAFAK,QAAQC,IAAI,wBACZT,GAAe,GAIfQ,QAAQC,IAAI,2CACP1E,EAAMoD,aAAab,OAIvBvC,EAAM2E,eAAN,CAAsB,CAAC,MAASP,EAAqB,KAAQC,EAAmB,KAAOC,EAAmB,KAAOC,IAAjH,mBAAwIvE,EAAMoD,gBAH9IpD,EAAM2E,eAAe,CAAC,CAAC,MAASP,EAAqB,KAAQC,EAAmB,KAAOC,EAAmB,KAAOC,KAOrHd,EAAoB,IACpBE,EAAmB,IACnBE,EAAmB,IACnBE,EAAmB,KAO8B/C,MAAOwC,EAAkBpC,KAAMsC,EAAiB5B,KAAM8B,EAAiBvD,SA7DnG,SAAC6D,GAAO,IAAD,EACPA,EAAEU,OAAhB1E,EADqB,EACrBA,KAAKE,EADgB,EAChBA,MACV,OAAOF,GACL,IAAK,QAEHuD,EAAoBrD,GAChB4D,GACFC,GAAe,GAEjB,MACF,IAAK,OACHN,EAAmBvD,GACnB,MACF,IAAK,OACHyD,EAAmBzD,GACnB,MACA,IAAK,WACHA,EAAQyE,MAAMC,KAAKZ,EAAEU,OAAOG,iBAAiB,SAAAC,GAAM,OAAEA,EAAO5E,SAC5D2D,EAAmB3D,GACnB,MACF,QACE,SAwCwIS,YAAamD,EAAW1D,SAAUN,EAAMM,cAElL,0BAASQ,UAAU,UAAnB,UACE,8CACA,cAAC,EAAD,CAAUsC,aAAcpD,EAAMoD,aAAcN,OAAQ9C,EAAM8C,gBC7ErDmC,EAAc,SAACjF,GAE1B,OACE,uBAAME,KAAK,UAAUU,SAAUZ,EAAMY,SAArC,UACJ,uBAAOX,IAAI,OAAX,SAAmBD,EAAMa,YAAY,sBAAMC,UAAU,QAAhB,0CAA4D,kBAAwB,uBAAOC,KAAK,OAAOb,KAAK,OAAOE,MAAOJ,EAAME,KAAMG,SAAUL,EAAMkF,QAASjE,YAAY,SAChN,uBAAOhB,IAAI,QAAX,4BAAyC,uBAAOc,KAAK,OAAOb,KAAK,QAAQE,MAAOJ,EAAMgC,MAAO3B,SAAUL,EAAMmF,SAAUlE,YAAY,QAAQmE,QAAQ,6CACnJ,uBAAOnF,IAAI,QAAX,6BAA0C,uBAAOc,KAAK,QAAQb,KAAK,QAAQE,MAAOJ,EAAMmC,MAAO9B,SAAUL,EAAMqF,SAAUpE,YAAY,UAErI,gDCLaqE,EAAe,SAACtF,GAAW,IAAD,EAEduD,mBAAS,IAFK,mBAE9BrD,EAF8B,KAEzBgF,EAFyB,OAGd3B,mBAAS,IAHK,mBAGhCvB,EAHgC,KAG1BmD,EAH0B,OAId5B,mBAAS,IAJK,mBAIhCpB,EAJgC,KAI1BkD,EAJ0B,OAKJ9B,oBAAS,GALL,mBAKhCS,EALgC,KAKtBC,EALsB,KAOjCsB,EAAe,SAACrB,GAAO,IAAD,EACLA,EAAEU,OAAhB1E,EADmB,EACnBA,KAAKE,EADc,EACdA,MACZ,OAAOF,GACL,IAAK,OACHgF,EAAQ9E,GACJ4D,GACFC,GAAe,GAEjB,MACF,IAAK,QACHkB,EAAS/E,GACT,MACF,IAAK,QACHiF,EAASjF,GACT,MACA,QACE,SAkCN,OACE,sBAAKU,UAAU,YAAf,UACE,0BAASA,UAAU,OAAnB,UACE,6CACA,cAAC,EAAD,CAAaF,SAjCE,SAACsD,GACpBA,EAAEC,iBAEH,IAAMqB,EAAiBtF,EACjBuF,EAAkBzD,EAClB0D,EAAkBvD,EAGxB,GAAInC,EAAMM,SAASkE,MAAK,SAAAhE,GAAO,OAAGA,EAAQE,OAAO8E,KAG/C,OAFAf,QAAQC,IAAI,wBACZT,GAAe,GAIfQ,QAAQC,IAAI,uCACP1E,EAAMM,SAASiC,OAIlBvC,EAAM2F,WAAN,CAAkB,CAAC,KAAQH,EAAgB,MAASC,EAAgB,MAAQC,IAA5E,mBAAgG1F,EAAMM,YAHvGN,EAAM2F,WAAW,CAAC,CAAC,KAAQH,EAAgB,MAASC,EAAgB,MAAQC,KAOhFR,EAAQ,IACRC,EAAS,IACTE,EAAS,KAQkCnF,KAAMA,EAAM8B,MAAOA,EAAOG,MAAOA,EAAO+C,QAASK,EAAcJ,SAAUI,EAAcF,SAAUE,EAAc1E,YAAamD,OAEnK,uBACA,0BAASlD,UAAU,UAAnB,UACE,0CACA,cAAC,EAAD,CAAUR,SAAUN,EAAMM,SAAUwC,OAAQ9C,EAAM8C,gBCN3C8C,MA1Df,WAAgB,IAAD,EACiBrC,mBAAS,IAD1B,mBACNjD,EADM,KACGqF,EADH,OAEyBpC,mBAAS,IAFlC,mBAENH,EAFM,KAEOuB,EAFP,KAIb,SAASkB,EAAW3B,GAElB,GAAmC,gBAAhCA,EAAEU,OAAOkB,aAAa,QAAwB,CAClD,IAAMC,EAAmB,YAAO3C,GAC/B2C,EAAoBC,OAAO9B,EAAEU,OAAO7B,GAAG,GAC3C4B,EAAeoB,OAEV,IAAoC,YAAhC7B,EAAEU,OAAOkB,aAAa,QAM7B,OALA,IAAMG,EAAe,YAAO3F,GAC5B2F,EAAgBD,OAAO9B,EAAEU,OAAO7B,GAAG,GACnC4C,EAAWM,IAOX,IAAMC,EACM,YADNA,EAEU,gBAMhB,OACE,qCACE,gCACE,cAAC,IAAD,CAASC,GAAID,EAAiBE,gBAAgB,SAAStF,UAAU,OAAjE,sBAGA,cAAC,IAAD,CAASqF,GAAID,EAAqBE,gBAAgB,SAAStF,UAAU,OAArE,6BAIF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAID,MAEhB,cAAC,IAAD,CAAOI,KAAMJ,EAAb,SAEE,cAAC,EAAD,CAAc5F,SAAUA,EAAUqF,WAAYA,EAAY7C,OAAQ+C,MAEpE,cAAC,IAAD,CAAOS,KAAMJ,EAAb,SAEE,cAAC,EAAD,CAAkB9C,aAAcA,EAAcuB,eAAgBA,EAAgBrE,SAAUA,EAAUwC,OAAQ+C,e,MCjDtHU,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.03375594.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n\r\nfunction handleChange(e){\r\n  let value = Array.from(e.target.selectedOptions, option=>option.value);\r\nprops.onChange(value);\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n    <label for=\"withwhom\">Who's the appointment with?</label>\r\n    <br></br>\r\n    <select name=\"withwhom\" multiple value={props.value} onChange={props.onChange}>\r\n    {props.contacts.map((contact, index) => {\r\nreturn <option value={contact.Name} key={index}>{contact.Name}</option>\r\n    })}\r\n    \r\n    </select>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {ContactPicker} from \"../contactPicker/ContactPicker\"\r\n\r\nexport const AppointmentForm = (props) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form name=\"appointment\" onSubmit={props.onSubmit}>\r\n<label for=\"appointment\">{props.isDuplicate?<span className=\"error\">Duplicate appointment found</span>:\"Appointment:\"}</label>\r\n<br/>\r\n<input type=\"text\" name=\"title\" value={props.title} onChange={props.onChange} placeholder=\"name of your appointment\" required></input>\r\n{props.contacts?\r\n<ContactPicker contacts={props.contacts} value={props.withwhom} onChange={props.onChange}/>:\"\"\r\n}\r\n<label for=\"date\">Date of appointment:</label>\r\n<br/><input type=\"date\" name=\"date\" value={props.date} min={getTodayString()} onChange={props.onChange} placeholder=\"date of the appointment\"></input>\r\n<br/><label for=\"time\">Time of appointment:</label><br/>\r\n<input type=\"time\" name=\"time\" value={props.time} onChange={props.onChange} placeholder=\"time\"></input>\r\n<br/>\r\n<button>Submit</button>\r\n    </form>\r\n\r\n  );\r\n};\r\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPhone, faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons'\n\nexport const ContactsSubTile = (props) => {\n    return (\n      <div>\n{props.phone?<p className=\"tile\"><FontAwesomeIcon icon={faPhone}/> {props.phone}</p>:\"\"}\n    {props.email?<p className=\"tile\"><FontAwesomeIcon icon={faEnvelopeSquare}/> {props.email}</p>:\"\"}        \n      </div>\n    );\n  };\n  \n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt, faClock, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport const AppointmentSubTile = (props) => {\n    return (\n      <div>\n        {props.with.length?<p className=\"tile\"><FontAwesomeIcon icon={faUser}/> {\n          props.with.join(\", \")\n          \n        }</p>:\"\"}\n{props.date?<p className=\"tile\"><FontAwesomeIcon icon={faCalendarAlt}/> {props.date}</p>:\"\"}\n    {props.time?<p className=\"tile\"><FontAwesomeIcon icon={faClock}/> {props.time}</p>:\"\"}        \n      </div>\n    );\n  };\n  \n","import React from 'react';\n\nexport const DeleteIcon = (props) => {\n    return (\n<span className=\"delete\" onClick={props.delete} id={props.id} type={props.type}>X</span>\n    )\n}","import React from \"react\";\r\nimport {ContactsSubTile} from './ContactsSubTile';\r\nimport {AppointmentSubTile} from './AppointmentSubTile';\r\nimport {DeleteIcon} from './DeleteIcon';\r\n\r\nexport const Tile = (props) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      <DeleteIcon id={props.index} delete={props.delete} type={props.name?\"contact\":\"appointment\"}/>\r\n      <p className=\"tile-title\">{props.name?props.name:props.title}</p>\r\n      {props.name?\r\n       <ContactsSubTile phone={props.phone} email={props.email}/>\r\n      :\r\n      <AppointmentSubTile date={props.date} time={props.time} with={props.with}/>\r\n    }\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Tile} from \"../tile/Tile\"\r\n\r\nexport const TileList = (props) => {\r\n  if (props.contacts){\r\n  if(!props.contacts.length){\r\n    return (\"No contacts yet\")\r\n  }\r\n  else {\r\n      return (\r\n    <div className=\"tileListContainer\">\r\n     {props.contacts.map((contact,index) => {\r\n       return <Tile\r\n        name={contact.Name}\r\n        phone={contact.Phone}\r\n        email={contact.eMail}\r\n        delete={props.delete}\r\n        key={index}\r\n        index={index}\r\n/>\r\n     }\r\n     )\r\n     }\r\n    </div>\r\n\r\n  );\r\n      }\r\n}\r\nelse if (props.appointments){\r\n  if(!props.appointments.length){\r\n    return (\"No appointments yet\")\r\n  }\r\n  else {\r\n      return (\r\n    <div className=\"tileListContainer\">\r\n     {props.appointments.map((appointment,index) => {\r\n       return <Tile\r\n        title={appointment.title}\r\n        date={appointment.date}\r\n        time={appointment.time}\r\n        with={appointment.with}\r\n        delete={props.delete}\r\n        key={index}\r\n        index={index}\r\n/>\r\n     }\r\n     )\r\n     }\r\n    </div>\r\n\r\n  );\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {AppointmentForm} from \"../../components/appointmentForm/AppointmentForm\"\r\nimport {TileList} from \"../../components/tileList/TileList\"\r\n\r\n\r\nexport const AppointmentsPage = (props) => {\r\n\r\nconst [appointmentTitle,setAppointmentTitle] = useState(\"\");\r\nconst [appointmentDate,setAppointmentDate] = useState(\"\");\r\nconst [appointmentTime,setAppointmentTime] = useState(\"\");\r\nconst [appointmentWith,setAppointmentWith] = useState([]);\r\nconst [duplicate,setIsDuplicate] = useState(false);\r\n\r\nconst handleChange = (e) => {\r\n  let {name,value} = e.target;\r\n  switch(name){\r\n    case \"title\":\r\n      \r\n      setAppointmentTitle(value);\r\n      if (duplicate){\r\n        setIsDuplicate(false)\r\n      }\r\n      break;\r\n    case \"date\":\r\n      setAppointmentDate(value);\r\n      break;\r\n    case \"time\":\r\n      setAppointmentTime(value);\r\n      break;\r\n      case \"withwhom\":\r\n        value = Array.from(e.target.selectedOptions, option=>option.value);\r\n        setAppointmentWith(value);\r\n        break;\r\n      default:\r\n        return;\r\n  }\r\n  }\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n //get values from state\r\n const newAppointmentTitle = appointmentTitle;\r\n const newAppointmentDate = appointmentDate;\r\n const newAppointmentTime = appointmentTime;\r\n const newAppointmentWith = appointmentWith;\r\n\r\n //check whether this contact already exists\r\n if (props.appointments.find(appointment=> appointment.title===newAppointmentTitle)){\r\n   console.log(\"Duplicate found\");\r\n   setIsDuplicate(true);\r\n   return;\r\n }\r\n else {\r\n   console.log(\"new appointment found, adding to thingy\")\r\n   if (!props.appointments.length){\r\n    props.setAppointment([{'title': newAppointmentTitle, 'date': newAppointmentDate,'time':newAppointmentTime,'with':newAppointmentWith}]);\r\n   }\r\n   else{\r\n    props.setAppointment([{'title': newAppointmentTitle, 'date': newAppointmentDate,'time':newAppointmentTime,'with':newAppointmentWith},...props.appointments]);\r\n }\r\n}\r\n//clear inputs\r\nsetAppointmentTitle(\"\");\r\nsetAppointmentDate(\"\");\r\nsetAppointmentTime(\"\");\r\nsetAppointmentWith([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"form\">\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm onSubmit={handleSubmit} title={appointmentTitle} date={appointmentDate} time={appointmentTime} onChange={handleChange} isDuplicate={duplicate} contacts={props.contacts}/>\r\n      </section>\r\n      <section className=\"results\">\r\n        <h2>Appointments</h2>\r\n        <TileList appointments={props.appointments} delete={props.delete}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = (props) => {\r\n\r\n  return (\r\n    <form name=\"contact\" onSubmit={props.onSubmit}>\r\n<label for=\"name\">{props.isDuplicate?<span className=\"error\">Duplicate contact name found</span>:\"Contact name:\"}</label><input type=\"text\" name=\"name\" value={props.name} onChange={props.setName} placeholder=\"name\"></input>\r\n<label for=\"phone\">Contact phone:</label><input type=\"text\" name=\"phone\" value={props.phone} onChange={props.setPhone} placeholder=\"phone\" pattern=\"([0-9]{3})?[-. )]*[0-9]{3}[-. ]*[0-9]{4}\"></input>\r\n<label for=\"email\">Contact e-mail:</label><input type=\"email\" name=\"email\" value={props.email} onChange={props.setEmail} placeholder=\"email\"></input>\r\n\r\n<button>Submit</button>\r\n    </form>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n// ({\r\n//   name,\r\n//   setName,\r\n//   phone,\r\n//   setPhone,\r\n//   email,\r\n//   setEmail,\r\n//   handleSubmit\r\n// })","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {ContactForm} from \"../../components/contactForm/ContactForm\"\r\nimport {TileList} from \"../../components/tileList/TileList\"\r\n\r\nexport const ContactsPage = (props) => {\r\n  \r\n  const [name,setName] = useState(\"\");\r\nconst [phone,setPhone] = useState(\"\");\r\nconst [email,setEmail] = useState(\"\");\r\nconst [duplicate,setIsDuplicate] = useState(false);\r\n\r\nconst handleChange = (e) => {\r\n  const {name,value} = e.target;\r\n  switch(name){\r\n    case \"name\":\r\n      setName(value);\r\n      if (duplicate){\r\n        setIsDuplicate(false)\r\n      }\r\n      break;\r\n    case \"phone\":\r\n      setPhone(value);\r\n      break;\r\n    case \"email\":\r\n      setEmail(value);\r\n      break;\r\n      default:\r\n        return;\r\n  }\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //get values from state\r\n   const newContactName = name;\r\n   const newContactPhone = phone;\r\n   const newContactEmail = email;\r\n\r\n   //check whether this contact already exists\r\n   if (props.contacts.find(contact=> contact.Name===newContactName)){\r\n     console.log(\"Duplicate found\");\r\n     setIsDuplicate(true);\r\n     return;\r\n   }\r\n   else {\r\n     console.log(\"new contact found, adding to thingy\")\r\n     if (!props.contacts.length){\r\n      props.setContact([{'Name': newContactName, 'Phone': newContactPhone,'eMail':newContactEmail}]);\r\n     }\r\n     else{\r\n       props.setContact([{'Name': newContactName, 'Phone': newContactPhone,'eMail':newContactEmail},...props.contacts]);\r\n   }\r\n  }\r\n//clear inputs\r\n  setName(\"\");\r\n  setPhone(\"\");\r\n  setEmail(\"\");\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"form\">\r\n        <h2>Add Contact</h2> \r\n        <ContactForm onSubmit={handleSubmit} name={name} phone={phone} email={email} setName={handleChange} setPhone={handleChange} setEmail={handleChange} isDuplicate={duplicate}/>\r\n      </section>\r\n      <hr />\r\n      <section className=\"results\">\r\n        <h2>Contacts</h2>\r\n        <TileList contacts={props.contacts} delete={props.delete}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts,setContact] = useState([]);\r\n  const [appointments,setAppointment] = useState([]);\r\n\r\n  function deleteItem(e){\r\n    \r\n    if(e.target.getAttribute(\"type\")===\"appointment\"){\r\n   const newAppointmentArray = [...appointments];\r\n    newAppointmentArray.splice(e.target.id,1)\r\nsetAppointment(newAppointmentArray);\r\n}\r\nelse if (e.target.getAttribute(\"type\")===\"contact\"){\r\n  const newContactArray = [...contacts];\r\n  newContactArray.splice(e.target.id,1)\r\n  setContact(newContactArray);\r\n}\r\nelse {\r\n  return;\r\n}\r\n  }\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\" className=\"link\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\" className=\"link\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} setContact={setContact} delete={deleteItem} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage appointments={appointments} setAppointment={setAppointment} contacts={contacts} delete={deleteItem}/>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}